buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'com.hermitowo'
version = '1.4'

java {
    archivesBaseName = 'AdvancedTFCTechUnofficial'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AdvancedTFCTech'

            mods {
                advancedtfctech {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AdvancedTFCTechUnofficial'

            mods {
                advancedtfctech {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AdvancedTFCTechUnofficial'

            mods {
                advancedtfctech {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'advancedtfctech', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                advancedtfctech {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "AdvancedTFCTech.refmap.json"

    config "AdvancedTFCTech.mixins.json"
}

sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources"
            ]
        }
    }
}

repositories {
    mavenCentral()
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // Mirror for JEI
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        // Patchouli
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    flatDir {
        dir "libs"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //implementation(fg.deobf("tfc:TerraFirmaCraft-Forge-${minecraft_version}:${tfc_version}"))
    implementation fg.deobf("curse.maven:tfc-302973:${tfc_identifier}")

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor("org.spongepowered:mixin:${mixin_version}:processor")
    }

    // Patchouli
    implementation(fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}"))

    // Jade
    compileOnly(fg.deobf("curse.maven:jade-324717:${jade_version}"))
    runtimeOnly(fg.deobf("curse.maven:jade-324717:${jade_version}"))
    compileOnly(fg.deobf("curse.maven:top-245211:${top_version}"))
    //runtimeOnly(fg.deobf("curse.maven:top-245211:${top_version}"))

    // JEI
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}"))

    //Immersive Engineering
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}")
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}:datagen")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "advancedtfctech",
                "Specification-Vendor"    : "HermitOwO",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "HermitOwO",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
